#!/usr/bin/env python3
########################################################################################################################

import flask
import atexit
import eventlet
import eventlet.green
import indi_proxy

########################################################################################################################

eventlet.monkey_patch()

########################################################################################################################

app = flask.Flask(__name__)

########################################################################################################################

class Client(object):

    ####################################################################################################################

    def __init__(self):

        ################################################################################################################

        self.sock = eventlet.green.socket.socket(eventlet.green.socket.AF_INET, eventlet.green.socket.SOCK_STREAM)

        self.host = None
        self.port = None

        ################################################################################################################

        indi_proxy.memory_initialize()

        self.proxy = indi_proxy.proxy_initialize(
            10 * 1024 * 1024,
            self._emit
        )

        ################################################################################################################

        atexit.register(self.bye)

    ####################################################################################################################

    def bye(self):

        indi_proxy.proxy_finalize(self.proxy)

        indi_proxy.memory_finalize()

        print('Bye!')

    ####################################################################################################################

    def start(self, host, port):

        ################################################################################################################

        self.host = host
        self.port = port

        ################################################################################################################

        self.sock.connect((host, port, ))

        ################################################################################################################

        eventlet.spawn(self._receive_thread)

        ################################################################################################################

        self.send_message('<getProperties version="1.7" />')

    ####################################################################################################################

    def send_message(self, message):

        self.sock.sendall(message.encode('utf-8'))

    ####################################################################################################################

    def _receive_thread(self):

        while True:

            try:

                indi_proxy.proxy_consume(self.proxy, self.sock.recv(1024))

            except Exception as e:

                print(f'Error receiving message: {e.__str__()}')

                eventlet.sleep(0.1)

    ####################################################################################################################

    def _emit(self, msg):

        doc = indi_proxy.xmldoc_parse(msg)

        if doc != 0:

            obj = indi_proxy.xmldoc_to_object(doc, False)

            if obj != 0:

                print(indi_proxy.object_to_string(obj).decode('utf-8'))

                indi_proxy.xmldoc_free(doc)

            indi_proxy.object_free(obj)

########################################################################################################################

@app.route('/')
def hello_world():

    return 'Hello, World!'

########################################################################################################################

if __name__ == '__main__':

    client = Client()

    client.start('localhost', 7624)

    app.run(host = '0.0.0.0', port = 5050, debug = False)

########################################################################################################################
